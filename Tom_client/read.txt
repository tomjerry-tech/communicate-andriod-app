

# 后端开发任务总结
## 项目概述
我们已经成功完成了一个基于Spring Boot的后端系统，该系统提供了用户登录和注册功能的API接口。这些接口可以被Android客户端调用，实现用户认证功能。

## 已完成的后端功能
### 1. 数据库设计与配置
- 创建了名为 yl_db 的MySQL数据库
- 配置了数据库连接（URL、用户名、密码等）
- 设置了JPA自动创建表结构的功能（hibernate.ddl-auto=update）
- 数据库使用UTF-8编码，支持中文字符
### 2. 实体类设计
- 创建了 User 实体类，包含以下字段：
  - id（主键，自增）
  - username（用户名，非空，唯一）
  - password（密码，非空）
  - email（电子邮件）
  - phone（电话号码）
  - createTime（创建时间）
### 3. 数据访问层
- 创建了 UserRepository 接口，继承自JpaRepository
- 实现了以下数据库操作方法：
  - findByUsername：根据用户名查询用户
  - existsByUsername：检查用户名是否已存在
### 4. 服务层
- 创建了 UserService 接口和 UserServiceImpl 实现类
- 实现了以下业务逻辑：
  - register：用户注册（检查用户名是否存在，设置创建时间，保存用户信息）
  - login：用户登录（验证用户名和密码）
  - checkUsernameExists：检查用户名是否已存在
### 5. 控制器层
- 创建了 UserController 类，提供RESTful API接口
- 实现了以下API端点：
  - POST /api/user/register ：用户注册
  - POST /api/user/login ：用户登录
  - GET /api/user/check/{username} ：检查用户名是否存在
### 6. 响应模型
- 创建了 ApiResponse 通用响应模型，统一API返回格式
- 包含状态码、消息和数据三个字段
### 7. 服务器配置
- 配置了服务器端口为8088
- 配置了应用程序名称为"Tom"
- 内嵌了Tomcat服务器，无需额外配置
## API接口说明
### 1. 用户注册
- URL : http://localhost:8088/api/user/register
- 方法 : POST
- 请求体 :
```json
{
    "username": "用户名",
    "password": "密码",
    "email": "邮箱",
    "phone": "手机号"
}
 ```

- 成功响应 :
```json
{
    "id": 1,
    "username": "用户名",
    "password": "密码",
    "email": "邮箱",
    "phone": "手机号",
    "createTime": "2025-04-30T10:00:00.000+00:00"
}
 ```
```

- 失败响应 :
```json
{
    "message": "用户名已存在"
}
 ```

### 2. 用户登录
- URL : http://localhost:8088/api/user/login
- 方法 : POST
- 请求体 :
```json
{
    "username": "用户名",
    "password": "密码"
}
 ```

- 成功响应 :
```json
{
    "message": "登录成功",
    "user": {
        "id": 1,
        "username": "用户名",
        "password": "密码",
        "email": "邮箱",
        "phone": "手机号",
        "createTime": "2025-04-30T10:00:00.000+00:00"
    }
}
 ```
```

- 失败响应 :
```json
{
    "message": "用户不存在"
}
 ```

或

```json
{
    "message": "密码错误"
}
 ```

### 3. 检查用户名是否存在
- URL : http://localhost:8088/api/user/check/ {username}
- 方法 : GET
- 成功响应 :
```json
{
    "exists": true/false
}
 ```

## 技术栈
- Spring Boot 2.7.18
- Spring Data JPA
- MySQL 8.0
- Tomcat (内嵌)
- Java 8

